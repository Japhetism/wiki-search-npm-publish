{"ast":null,"code":"var _jsxFileName = \"/Users/babatundeojo/Desktop/wikimedia/wikimedia-search/src/components/wikiSearch/WikiSearch.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { QueryCard } from '../card/Card.stories';\nimport { SearchInput } from '../search/Search.stories';\nimport { Error } from '../error/Error';\nimport './wikiSearch.css';\n/**\n * UI component for wiki search\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const WikiSearch = ({\n  placeholder,\n  pageSize,\n  ...props\n}) => {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [searchResponse, setSearchResponse] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  const makeApiCalls = event => {\n    setError(\"\");\n\n    if (event.key === 'Enter' && query !== \"\") {\n      fetch().then(response => response.json()).then(data => {\n        setSearchResponse(data.pages);\n\n        if (!data.pages || data.pages.length === 0) {\n          setError(`No search found for ${query}`);\n        }\n\n        console.log(data);\n      }).catch(error => {\n        setError(error);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"storybook-container\",\n    children: [Array.isArray(searchResponse) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: searchResponse.map(response => /*#__PURE__*/_jsxDEV(QueryCard, { ...response\n      }, response.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this))\n    }, void 0, false) : null, error ? /*#__PURE__*/_jsxDEV(Error, {\n      text: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(SearchInput, {\n      placeholder: placeholder,\n      onChange: setQuery,\n      onKeyUp: makeApiCalls\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WikiSearch, \"KcXKO8f2/BTxkfmfiX3NkOql+J4=\");\n\n_c = WikiSearch;\nWikiSearch.propTypes = {\n  /**\n   * number of entries to fetch\n   * from the url\n  */\n  pageSize: PropTypes.number,\n\n  /**\n   * Placeholder for wiki search\n   */\n  placeholder: PropTypes.string\n};\nWikiSearch.defaultProps = {};\n\nvar _c;\n\n$RefreshReg$(_c, \"WikiSearch\");\nWikiSearch.__docgenInfo = {\n  \"description\": \"UI component for wiki search\",\n  \"methods\": [],\n  \"displayName\": \"WikiSearch\",\n  \"props\": {\n    \"pageSize\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"number of entries to fetch\\nfrom the url\"\n    },\n    \"placeholder\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Placeholder for wiki search\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/wikiSearch/WikiSearch.jsx\"] = {\n    name: \"WikiSearch\",\n    docgenInfo: WikiSearch.__docgenInfo,\n    path: \"src/components/wikiSearch/WikiSearch.jsx\"\n  };\n}","map":{"version":3,"sources":["/Users/babatundeojo/Desktop/wikimedia/wikimedia-search/src/components/wikiSearch/WikiSearch.jsx"],"names":["React","useState","PropTypes","QueryCard","SearchInput","Error","WikiSearch","placeholder","pageSize","props","query","setQuery","searchResponse","setSearchResponse","error","setError","makeApiCalls","event","key","fetch","then","response","json","data","pages","length","console","log","catch","Array","isArray","map","id","propTypes","number","string","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA2B,sBAA3B;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,kBAAP;AAEA;AACA;AACA;;;;AACA,OAAO,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,QAAf;AAAyB,KAAGC;AAA5B,CAAD,KAAyC;AAAA;;AACjE,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMe,YAAY,GAAIC,KAAD,IAAW;AAC9BF,IAAAA,QAAQ,CAAC,EAAD,CAAR;;AACA,QAAIE,KAAK,CAACC,GAAN,KAAc,OAAd,IAAyBR,KAAK,KAAK,EAAvC,EAA2C;AACzCS,MAAAA,KAAK,GACFC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACVV,QAAAA,iBAAiB,CAACU,IAAI,CAACC,KAAN,CAAjB;;AACA,YAAI,CAACD,IAAI,CAACC,KAAN,IAAeD,IAAI,CAACC,KAAL,CAAWC,MAAX,KAAsB,CAAzC,EAA4C;AACxCV,UAAAA,QAAQ,CAAE,uBAAsBL,KAAM,EAA9B,CAAR;AACH;;AACDgB,QAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACH,OARH,EASGK,KATH,CASSd,KAAK,IAAI;AACZC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,OAXH;AAYD;AACF,GAhBD;;AAkBA,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,eACGe,KAAK,CAACC,OAAN,CAAclB,cAAd,iBACC;AAAA,gBACGA,cAAc,CAACmB,GAAf,CAAoBV,QAAD,iBAClB,QAAC,SAAD,OAAiCA;AAAjC,SAAgBA,QAAQ,CAACW,EAAzB;AAAA;AAAA;AAAA;AAAA,cADD;AADH,qBADD,GAMG,IAPN,EAQGlB,KAAK,gBACJ,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEA;AAAb;AAAA;AAAA;AAAA;AAAA,YADI,GAEF,IAVN,eAWE,QAAC,WAAD;AACE,MAAA,WAAW,EAAEP,WADf;AAEE,MAAA,QAAQ,EAAEI,QAFZ;AAGE,MAAA,OAAO,EAAEK;AAHX;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA1CM;;GAAMV,U;;KAAAA,U;AA4CbA,UAAU,CAAC2B,SAAX,GAAuB;AACrB;AACF;AACA;AACA;AACEzB,EAAAA,QAAQ,EAAEN,SAAS,CAACgC,MALC;;AAMrB;AACF;AACA;AACE3B,EAAAA,WAAW,EAAEL,SAAS,CAACiC;AATF,CAAvB;AAYA7B,UAAU,CAAC8B,YAAX,GAA0B,EAA1B","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { QueryCard }  from '../card/Card.stories';\nimport { SearchInput } from '../search/Search.stories';\nimport { Error } from '../error/Error';\nimport './wikiSearch.css';\n\n/**\n * UI component for wiki search\n */\nexport const WikiSearch = ({ placeholder, pageSize, ...props }) => {\n  const [query, setQuery] = useState(\"\");\n  const [searchResponse, setSearchResponse] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  const makeApiCalls = (event) => {\n    setError(\"\");\n    if (event.key === 'Enter' && query !== \"\") {\n      fetch()\n        .then(response => response.json())\n        .then(data => {\n            setSearchResponse(data.pages)\n            if (!data.pages || data.pages.length === 0) {\n                setError(`No search found for ${query}`);\n            }\n            console.log(data)\n        })\n        .catch(error => {\n            setError(error);\n        });\n    }\n  }\n\n  return (\n    <div className=\"storybook-container\">\n      {Array.isArray(searchResponse) ? (\n        <>\n          {searchResponse.map((response) => (\n            <QueryCard key={response.id} {...response} />\n          ))}\n        </>\n      ) : null}\n      {error ? (\n        <Error text={error} />\n      ) : null}\n      <SearchInput  \n        placeholder={placeholder}\n        onChange={setQuery}\n        onKeyUp={makeApiCalls}\n      />\n    </div>  \n  );\n};\n\nWikiSearch.propTypes = {\n  /**\n   * number of entries to fetch\n   * from the url\n  */\n  pageSize: PropTypes.number,\n  /**\n   * Placeholder for wiki search\n   */\n  placeholder: PropTypes.string,\n};\n\nWikiSearch.defaultProps = {\n  \n};\n"]},"metadata":{},"sourceType":"module"}