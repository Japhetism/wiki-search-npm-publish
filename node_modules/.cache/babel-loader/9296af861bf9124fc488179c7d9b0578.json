{"ast":null,"code":"var _jsxFileName = \"/Users/babatundeojo/Desktop/wikimedia/wikimedia-search/src/components/search/Search.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './search.css';\n/**\n * Primary UI component for user interaction\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Buttons = ({\n  placeholder,\n  ...props\n}) => {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n\n  const makeApiCalls = event => {\n    console.log(event.key);\n\n    if (event.key === 'Enter') {\n      console.log('query is ', query);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"search\",\n    className: \"storybook-button\",\n    ...props,\n    placeholder: placeholder,\n    onChange: event => setQuery(event.target.value),\n    onKeyUp: event => makeApiCalls(event)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Buttons, \"HYX2QbDDdTtlu7GfoQbAPZOIM6k=\");\n\n_c = Buttons;\nButtons.propTypes = {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * Optional click handler\n   */\n  onClick: PropTypes.func\n};\nButtonsdefaultProps = {\n  onClick: undefined\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Buttons\");\nButtons.__docgenInfo = {\n  \"description\": \"Primary UI component for user interaction\",\n  \"methods\": [],\n  \"displayName\": \"Buttons\",\n  \"props\": {\n    \"placeholder\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Is this the principal call to action on the page?\"\n    },\n    \"onClick\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"Optional click handler\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/search/Search.jsx\"] = {\n    name: \"Buttons\",\n    docgenInfo: Buttons.__docgenInfo,\n    path: \"src/components/search/Search.jsx\"\n  };\n}","map":{"version":3,"sources":["/Users/babatundeojo/Desktop/wikimedia/wikimedia-search/src/components/search/Search.jsx"],"names":["React","useState","PropTypes","Buttons","placeholder","props","query","setQuery","makeApiCalls","event","console","log","key","target","value","propTypes","string","onClick","func","ButtonsdefaultProps","undefined"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,cAAP;AAEA;AACA;AACA;;;AACA,OAAO,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAe,KAAGC;AAAlB,CAAD,KAA+B;AAAA;;AACpD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMO,YAAY,GAAIC,KAAD,IAAW;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,GAAlB;;AACA,QAAIH,KAAK,CAACG,GAAN,KAAc,OAAlB,EAA2B;AACzBF,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBL,KAAzB;AACD;AACJ,GALD;;AAOA,sBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,kBAFZ;AAAA,OAGMD,KAHN;AAIE,IAAA,WAAW,EAAED,WAJf;AAKE,IAAA,QAAQ,EAAEK,KAAK,IAAIF,QAAQ,CAACE,KAAK,CAACI,MAAN,CAAaC,KAAd,CAL7B;AAME,IAAA,OAAO,EAAEL,KAAK,IAAID,YAAY,CAACC,KAAD;AANhC;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CApBM;;GAAMN,O;;KAAAA,O;AAsBbA,OAAO,CAACY,SAAR,GAAoB;AAClB;AACF;AACA;AACEX,EAAAA,WAAW,EAAEF,SAAS,CAACc,MAJL;;AAKlB;AACF;AACA;AACEC,EAAAA,OAAO,EAAEf,SAAS,CAACgB;AARD,CAApB;AAWAC,mBAAmB,GAAG;AACpBF,EAAAA,OAAO,EAAEG;AADW,CAAtB","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './search.css';\n\n/**\n * Primary UI component for user interaction\n */\nexport const Buttons = ({ placeholder, ...props }) => {\n  const [query, setQuery] = useState(\"\");\n\n  const makeApiCalls = (event) => {\n      console.log(event.key)\n      if (event.key === 'Enter') {\n        console.log('query is ', query)\n      }\n  }\n\n  return (\n    <input\n      type=\"search\"\n      className=\"storybook-button\"\n      {...props}\n      placeholder={placeholder}\n      onChange={event => setQuery(event.target.value)}\n      onKeyUp={event => makeApiCalls(event)}\n    />\n  );\n};\n\nButtons.propTypes = {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  placeholder: PropTypes.string,\n  /**\n   * Optional click handler\n   */\n  onClick: PropTypes.func,\n};\n\nButtonsdefaultProps = {\n  onClick: undefined,\n};\n"]},"metadata":{},"sourceType":"module"}