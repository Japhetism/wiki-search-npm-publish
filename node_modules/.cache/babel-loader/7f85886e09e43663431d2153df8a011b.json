{"ast":null,"code":"var _jsxFileName = \"/Users/babatundeojo/Desktop/wikimedia/wikimedia-search/src/components/wikiSearch/WikiSearch.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { QueryCard } from '../card/Card.stories';\nimport { SearchInput } from '../search/Search.stories';\n/**\n * UI component for wiki search\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const WikiSearch = ({\n  placeholder,\n  ...props\n}) => {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [searchResponse, setSearchResponse] = useState([]);\n\n  const makeApiCalls = event => {\n    if (event.key === 'Enter' && query !== \"\") {\n      fetch(`https://en.wikipedia.org/w/rest.php/v1/search/title?q=${query}&limit=10`).then(response => response.json()).then(data => {\n        setSearchResponse(data.pages);\n        console.log(data);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [Array.isArray(searchResponse) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: searchResponse.map(response => /*#__PURE__*/_jsxDEV(QueryCard, { ...response\n      }, response.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this))\n    }, void 0, false) : null, /*#__PURE__*/_jsxDEV(SearchInput, {\n      placeholder: placeholder,\n      onChange: setQuery,\n      onKeyUp: makeApiCalls\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WikiSearch, \"uH3LQ8CypEKG4Cqwd9wtheIwjDE=\");\n\n_c = WikiSearch;\nWikiSearch.propTypes = {\n  /**\n   * number of entries to fetch\n   * from the url\n  */\n  pageSize: PropTypes.number,\n\n  /**\n   * Placeholder for wiki search\n   */\n  placeholder: PropTypes.string\n};\nWikiSearch.defaultProps = {};\n\nvar _c;\n\n$RefreshReg$(_c, \"WikiSearch\");\nWikiSearch.__docgenInfo = {\n  \"description\": \"UI component for wiki search\",\n  \"methods\": [],\n  \"displayName\": \"WikiSearch\",\n  \"props\": {\n    \"pageSize\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"number of entries to fetch\\nfrom the url\"\n    },\n    \"placeholder\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Placeholder for wiki search\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/wikiSearch/WikiSearch.jsx\"] = {\n    name: \"WikiSearch\",\n    docgenInfo: WikiSearch.__docgenInfo,\n    path: \"src/components/wikiSearch/WikiSearch.jsx\"\n  };\n}","map":{"version":3,"sources":["/Users/babatundeojo/Desktop/wikimedia/wikimedia-search/src/components/wikiSearch/WikiSearch.jsx"],"names":["React","useState","PropTypes","QueryCard","SearchInput","WikiSearch","placeholder","props","query","setQuery","searchResponse","setSearchResponse","makeApiCalls","event","key","fetch","then","response","json","data","pages","console","log","Array","isArray","map","id","propTypes","pageSize","number","string","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA2B,sBAA3B;AACA,SAASC,WAAT,QAA4B,0BAA5B;AAEA;AACA;AACA;;;;AACA,OAAO,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAe,KAAGC;AAAlB,CAAD,KAA+B;AAAA;;AACvD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,EAAD,CAApD;;AAEA,QAAMW,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAIA,KAAK,CAACC,GAAN,KAAc,OAAd,IAAyBN,KAAK,KAAK,EAAvC,EAA2C;AACzCO,MAAAA,KAAK,CAAE,yDAAwDP,KAAM,WAAhE,CAAL,CACGQ,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACVR,QAAAA,iBAAiB,CAACQ,IAAI,CAACC,KAAN,CAAjB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACH,OALH;AAMD;AACF,GATD;;AAWA,sBACE;AAAA,eACGI,KAAK,CAACC,OAAN,CAAcd,cAAd,iBACC;AAAA,gBACGA,cAAc,CAACe,GAAf,CAAoBR,QAAD,iBAClB,QAAC,SAAD,OAAiCA;AAAjC,SAAgBA,QAAQ,CAACS,EAAzB;AAAA;AAAA;AAAA;AAAA,cADD;AADH,qBADD,GAMG,IAPN,eAQE,QAAC,WAAD;AACE,MAAA,WAAW,EAAEpB,WADf;AAEE,MAAA,QAAQ,EAAEG,QAFZ;AAGE,MAAA,OAAO,EAAEG;AAHX;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA/BM;;GAAMP,U;;KAAAA,U;AAiCbA,UAAU,CAACsB,SAAX,GAAuB;AACrB;AACF;AACA;AACA;AACEC,EAAAA,QAAQ,EAAE1B,SAAS,CAAC2B,MALC;;AAMrB;AACF;AACA;AACEvB,EAAAA,WAAW,EAAEJ,SAAS,CAAC4B;AATF,CAAvB;AAYAzB,UAAU,CAAC0B,YAAX,GAA0B,EAA1B","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { QueryCard }  from '../card/Card.stories';\nimport { SearchInput } from '../search/Search.stories';\n\n/**\n * UI component for wiki search\n */\nexport const WikiSearch = ({ placeholder, ...props }) => {\n  const [query, setQuery] = useState(\"\");\n  const [searchResponse, setSearchResponse] = useState([]);\n\n  const makeApiCalls = (event) => {\n    if (event.key === 'Enter' && query !== \"\") {\n      fetch(`https://en.wikipedia.org/w/rest.php/v1/search/title?q=${query}&limit=10`)\n        .then(response => response.json())\n        .then(data => {\n            setSearchResponse(data.pages)\n            console.log(data)\n        });\n    }\n  }\n\n  return (\n    <div>\n      {Array.isArray(searchResponse) ? (\n        <>\n          {searchResponse.map((response) => (\n            <QueryCard key={response.id} {...response} />\n          ))}\n        </>\n      ) : null}\n      <SearchInput  \n        placeholder={placeholder}\n        onChange={setQuery}\n        onKeyUp={makeApiCalls}\n      />\n    </div>  \n  );\n};\n\nWikiSearch.propTypes = {\n  /**\n   * number of entries to fetch\n   * from the url\n  */\n  pageSize: PropTypes.number,\n  /**\n   * Placeholder for wiki search\n   */\n  placeholder: PropTypes.string,\n};\n\nWikiSearch.defaultProps = {\n  \n};\n"]},"metadata":{},"sourceType":"module"}