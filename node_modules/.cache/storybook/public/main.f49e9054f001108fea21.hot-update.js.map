{"version":3,"file":"main.f49e9054f001108fea21.hot-update.js","sources":["webpack:///./src/components/wikiSearch/WikiSearch.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { QueryCard }  from '../card/Card.stories';\nimport { SearchInput } from '../search/Search.stories';\nimport { Error } from '../error/Error';\nimport { CustomLoader } from '../loader/Loader.stories';\nimport './wikiSearch.css';\n\n/**\n * UI component for wiki search\n */\nexport const WikiSearch = ({ placeholder, pageSize, ...props }) => {\n  const [query, setQuery] = useState(\"\");\n  const [searchResponse, setSearchResponse] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n\n  const makeApiCalls = (event) => {\n    setError(\"\");\n    if (event.key === 'Enter' && query !== \"\") {\n      const url = `https://en.wikipedia.org/w/rest.php/v1/search/title?q=${query}&limit=${pageSize > 100 ? 100 : pageSize}`;\n      fetch(url)\n        .then(response => response.json())\n        .then(data => {\n          setSearchResponse(data.pages)\n          if (!data.pages || data.pages.length === 0) {\n            setError(`No search found for ${query}`);\n          }\n        })\n        .catch(error => {\n          setError(error);\n        });\n    }\n  }\n\n  return (\n    <div className=\"storybook-container\">\n      {error ? (\n        <div className=\"storybook-error\"><Error text={error} /></div>\n      ) : null}\n      \n      {isLoading ? (\n        <div className=\"storybook-loader\"><CustomLoader /></div>\n      ) : null}\n       \n      {Array.isArray(searchResponse) ? (\n        <>\n          {searchResponse.map((response) => (\n            <QueryCard key={response.id} {...response} />\n          ))}\n        </>\n      ) : null}\n\n      <SearchInput  \n        placeholder={placeholder}\n        onChange={setQuery}\n        onKeyUp={makeApiCalls}\n      />\n    </div>  \n  );\n};\n\nWikiSearch.propTypes = {\n  /**\n   * number of entries to fetch\n   * from the url\n  */\n  pageSize: PropTypes.number,\n  /**\n   * Placeholder for wiki search\n   */\n  placeholder: PropTypes.string,\n};\n\nWikiSearch.defaultProps = {\n  \n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AAAA;AAAA;AAAA;AAAA;AAFA;AAQA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAwBA;AACA;AAlDA;AACA;AADA;AAmDA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AATA;AAYA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}